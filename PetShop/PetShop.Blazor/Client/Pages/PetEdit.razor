@page "/petlist/edit/{Id:int?}"
@using PetShop.Model
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Pet Edit</h3>

@if (PetItem == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
            <div class="col-md-6">
            <label class="form-label">Breed</label>
            <input class="form-control" @bind="@PetItem.Breed" />
        </div>
         <div class="col-md-6">
            <label for="pet-type">Type</label>
            <select name="pet-type" class="form-select" @bind="PetType">
                <option value="-1">Select Pet Type</option>
                @foreach (var item in Enum.GetValues(typeof(AnimalType)))
                {
                    <option value="@((int)item)">@item.ToString()</option>
                }
            </select>
        </div>
        <div class="col-md-6">
            <label for="pet-status">Status</label>
            <select name="pet-status" class="form-select" @bind="PetStatus">
                <option value="-1">Select Pet Status</option>
                @foreach (var item in Enum.GetValues(typeof(PetStatus)))
                {
                    <option value="@((int)item)">@item.ToString()</option>
                }
            </select>
        </div>
        <div class="col-md-6">
            <label class="form-label">Price</label>
            <input class="form-control" @bind="@PetItem.Price" />
        </div>
        <div class="col-md-6">
            <label class="form-label">Cost</label>
            <input class="form-control" @bind="@PetItem.Cost" />
        </div>
    </div>
    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
}

@code {
    [Parameter] public int? ID { get; set; }
    PetEditViewModel PetItem { get; set;  }
    private int PetType { get; set; } = -1;
    private int PetStatus { get; set; } = -1;

    protected override async Task OnInitializedAsync()
    {
        if(ID == null)
        {
            PetItem = await httpClient.GetFromJsonAsync<PetEditViewModel>($"pet/{(ID == null ? 0 : ID)}"); 
        }
        if(ID != null)
        {
            PetType = (int)PetItem.AnimalType;
            PetStatus = (int)PetItem.PetStatus;
        }

    }
    protected async Task OnSave()
    {
         if (string.IsNullOrEmpty(PetItem.Breed) ||
            PetType == -1 ||
            PetStatus == -1 ||
            PetItem.Cost == 0 ||
            PetItem.Price == 0)
            return;
        HttpResponseMessage response;
        PetItem.AnimalType = (AnimalType)PetType;
        PetItem.PetStatus = (PetStatus)PetStatus;
        if (ID == null)
        {
            response = await httpClient.PostAsJsonAsync("pet", PetItem);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("Pet", PetItem);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("petlist");
    }

    protected void OnCancel()
    {
        navigationManager.NavigateTo("petlist");
    }

}
