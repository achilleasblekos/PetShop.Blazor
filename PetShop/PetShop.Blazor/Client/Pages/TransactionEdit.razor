@page "/transactionlist/edit/{Id:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>TransactionEdit</h3>

@if (TransactionItem == null)
{
    <p>Loading ...</p>
}
else
{

    <div class="card mt-2">
        <div class="card-header">
            <div class="input-group">
                @*<input class="form-control me-2" @bind="TransactionItem" placeholder="New comment ..." />*@
                <CommenterSelect Commenters="TransactionItem.Customers"
                                 ShowPlaceholder=true
                                 @bind-Value="newCustomerId" />
                <button class="btn btn-primary" @onclick="AddCustomer">+</button>
            </div>
        </div>
    </div>
   

    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
}

@code {
    [Parameter] public int? Id { get; set; }
    TransactionEditViewModel TransactionItem { get; set; }
    private int newCustomerId { get; set; } = -1;

    protected override async Task OnInitializedAsync()
    {
        TransactionItem = await httpClient.GetFromJsonAsync<TransactionEditViewModel>($"transaction/{(Id == null ? 0 : Id)}");
    }


    protected async Task OnSave()
    {
        HttpResponseMessage response;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("transaction", TransactionItem);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("transaction", TransactionItem);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("transactionlist");
    }

    protected void OnCancel()
    {
        navigationManager.NavigateTo("transactionlist");
    }

    protected void AddCustomer()
    {
        if (newCustomerId == -1) return;

        TransactionItem._Customer = new TransactionEditCustomerViewModel() {
            ID = TransactionItem.Customer.ID,
            Name = TransactionItem.Customer.Name,
            Surname = TransactionItem.Customer.Surname,
            TIN = TransactionItem.Customer.TIN,
            Phone = TransactionItem.Customer.Phone
        };
        //     {
       //         Text = newCommentText,
       //         CommenterId = newCommentCommenterId
       //     });
       // newCommentText = null;
       // newCommentCommenterId = -1;
    }


}
